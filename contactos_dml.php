<?php

// Data functions (insert, update, delete, form) for table contactos

// This script and data application were generated by AppGini 5.97
// Download AppGini for free from https://bigprof.com/appgini/download/

function contactos_insert(&$error_message = '') {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('contactos');
	if(!$arrPerm['insert']) return false;

	$data = [
		'tipo_contacto' => Request::lookup('tipo_contacto', ''),
		'tipo_iden' => Request::lookup('tipo_iden', ''),
		'identificacion' => Request::val('identificacion', ''),
		'nombre' => Request::val('nombre', ''),
		'ciudad' => Request::lookup('ciudad', ''),
		'telefono' => Request::val('telefono', ''),
		'direccion' => Request::val('direccion', ''),
		'tipo_relacion' => Request::lookup('tipo_relacion', ''),
		'nota' => Request::val('nota', ''),
		'reg_creado' => parseCode('<%%creationDateTime%%>', true, true),
		'creado' => parseCode('<%%creationDateTime%%>', true, true),
		'creado_por' => parseCode('<%%creatorUsername%%>', true),
	];

	if($data['tipo_contacto'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Tipo de contacto': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['tipo_iden'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Tipo de ID': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['identificacion'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'No. Identificacion': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['nombre'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Nombre': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['ciudad'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Ciudad': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['telefono'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Telefono': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['tipo_relacion'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Tipo de relacion': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['nota'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Descripci&#243;n': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}

	// hook: contactos_before_insert
	if(function_exists('contactos_before_insert')) {
		$args = [];
		if(!contactos_before_insert($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('contactos', backtick_keys_once($data), $error);
	if($error)
		die("{$error}<br><a href=\"#\" onclick=\"history.go(-1);\">{$Translation['< back']}</a>");

	$recID = db_insert_id(db_link());

	update_calc_fields('contactos', $recID, calculated_fields()['contactos']);

	// hook: contactos_after_insert
	if(function_exists('contactos_after_insert')) {
		$res = sql("SELECT * FROM `contactos` WHERE `id_contactos`='" . makeSafe($recID, false) . "' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=[];
		if(!contactos_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('contactos', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(!empty($_REQUEST['SelectedID'])) contactos_copy_children($recID, $_REQUEST['SelectedID']);

	return $recID;
}

function contactos_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = []; // array of curl handlers for launching insert requests
	$eo = ['silentErrors' => true];
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function contactos_delete($selected_id, $AllowDeleteOfParents = false, $skipChecks = false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id = makeSafe($selected_id);

	// mm: can member delete record?
	if(!check_record_permission('contactos', $selected_id, 'delete')) {
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: contactos_before_delete
	if(function_exists('contactos_before_delete')) {
		$args = [];
		if(!contactos_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'] . (
				!empty($args['error_message']) ?
					'<div class="text-bold">' . strip_tags($args['error_message']) . '</div>'
					: '' 
			);
	}

	// child table: mantenimientos
	$res = sql("SELECT `id_contactos` FROM `contactos` WHERE `id_contactos`='{$selected_id}'", $eo);
	$id_contactos = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `mantenimientos` WHERE `responsable`='" . makeSafe($id_contactos[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'mantenimientos', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'mantenimientos', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="button" value="' . $Translation['yes'] . '" onClick="window.location = \'contactos_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="button" value="' . $Translation[ 'no'] . '" onClick="window.location = \'contactos_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: calibraciones
	$res = sql("SELECT `id_contactos` FROM `contactos` WHERE `id_contactos`='{$selected_id}'", $eo);
	$id_contactos = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `calibraciones` WHERE `empresa`='" . makeSafe($id_contactos[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'calibraciones', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'calibraciones', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="button" value="' . $Translation['yes'] . '" onClick="window.location = \'contactos_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="button" value="' . $Translation[ 'no'] . '" onClick="window.location = \'contactos_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: facturas
	$res = sql("SELECT `id_contactos` FROM `contactos` WHERE `id_contactos`='{$selected_id}'", $eo);
	$id_contactos = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `facturas` WHERE `proveedor`='" . makeSafe($id_contactos[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'facturas', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'facturas', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="button" value="' . $Translation['yes'] . '" onClick="window.location = \'contactos_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="button" value="' . $Translation[ 'no'] . '" onClick="window.location = \'contactos_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: movi_envio
	$res = sql("SELECT `id_contactos` FROM `contactos` WHERE `id_contactos`='{$selected_id}'", $eo);
	$id_contactos = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `movi_envio` WHERE `nombre`='" . makeSafe($id_contactos[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'movi_envio', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'movi_envio', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="button" value="' . $Translation['yes'] . '" onClick="window.location = \'contactos_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="button" value="' . $Translation[ 'no'] . '" onClick="window.location = \'contactos_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: movi_recepcion
	$res = sql("SELECT `id_contactos` FROM `contactos` WHERE `id_contactos`='{$selected_id}'", $eo);
	$id_contactos = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `movi_recepcion` WHERE `nombre`='" . makeSafe($id_contactos[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'movi_recepcion', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'movi_recepcion', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="button" value="' . $Translation['yes'] . '" onClick="window.location = \'contactos_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="button" value="' . $Translation[ 'no'] . '" onClick="window.location = \'contactos_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: biomedicos
	$res = sql("SELECT `id_contactos` FROM `contactos` WHERE `id_contactos`='{$selected_id}'", $eo);
	$id_contactos = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `biomedicos` WHERE `id_contacto`='" . makeSafe($id_contactos[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'biomedicos', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'biomedicos', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="button" value="' . $Translation['yes'] . '" onClick="window.location = \'contactos_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="button" value="' . $Translation[ 'no'] . '" onClick="window.location = \'contactos_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: movi_envio_articulo
	$res = sql("SELECT `id_contactos` FROM `contactos` WHERE `id_contactos`='{$selected_id}'", $eo);
	$id_contactos = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `movi_envio_articulo` WHERE `nombre`='" . makeSafe($id_contactos[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'movi_envio_articulo', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'movi_envio_articulo', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="button" value="' . $Translation['yes'] . '" onClick="window.location = \'contactos_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="button" value="' . $Translation[ 'no'] . '" onClick="window.location = \'contactos_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: movi_recepcion_articulos
	$res = sql("SELECT `id_contactos` FROM `contactos` WHERE `id_contactos`='{$selected_id}'", $eo);
	$id_contactos = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `movi_recepcion_articulos` WHERE `nombre`='" . makeSafe($id_contactos[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'movi_recepcion_articulos', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'movi_recepcion_articulos', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="button" value="' . $Translation['yes'] . '" onClick="window.location = \'contactos_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="button" value="' . $Translation[ 'no'] . '" onClick="window.location = \'contactos_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	sql("DELETE FROM `contactos` WHERE `id_contactos`='{$selected_id}'", $eo);

	// hook: contactos_after_delete
	if(function_exists('contactos_after_delete')) {
		$args = [];
		contactos_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("DELETE FROM `membership_userrecords` WHERE `tableName`='contactos' AND `pkValue`='{$selected_id}'", $eo);
}

function contactos_update(&$selected_id, &$error_message = '') {
	global $Translation;

	// mm: can member edit record?
	if(!check_record_permission('contactos', $selected_id, 'edit')) return false;

	$data = [
		'tipo_contacto' => Request::lookup('tipo_contacto', ''),
		'tipo_iden' => Request::lookup('tipo_iden', ''),
		'identificacion' => Request::val('identificacion', ''),
		'nombre' => Request::val('nombre', ''),
		'ciudad' => Request::lookup('ciudad', ''),
		'telefono' => Request::val('telefono', ''),
		'direccion' => Request::val('direccion', ''),
		'tipo_relacion' => Request::lookup('tipo_relacion', ''),
		'nota' => Request::val('nota', ''),
		'editado' => parseCode('<%%editingDateTime%%>', false, true),
		'editado_por' => parseCode('<%%editorUsername%%>', false),
	];

	if($data['tipo_contacto'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Tipo de contacto': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['tipo_iden'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Tipo de ID': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['identificacion'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'No. Identificacion': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['nombre'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Nombre': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['ciudad'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Ciudad': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['telefono'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Telefono': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['tipo_relacion'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Tipo de relacion': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['nota'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Descripci&#243;n': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	// get existing values
	$old_data = getRecord('contactos', $selected_id);
	if(is_array($old_data)) {
		$old_data = array_map('makeSafe', $old_data);
		$old_data['selectedID'] = makeSafe($selected_id);
	}

	$data['selectedID'] = makeSafe($selected_id);

	// hook: contactos_before_update
	if(function_exists('contactos_before_update')) {
		$args = ['old_data' => $old_data];
		if(!contactos_before_update($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$set = $data; unset($set['selectedID']);
	foreach ($set as $field => $value) {
		$set[$field] = ($value !== '' && $value !== NULL) ? $value : NULL;
	}

	if(!update(
		'contactos', 
		backtick_keys_once($set), 
		['`id_contactos`' => $selected_id], 
		$error_message
	)) {
		echo $error_message;
		echo '<a href="contactos_view.php?SelectedID=' . urlencode($selected_id) . "\">{$Translation['< back']}</a>";
		exit;
	}


	$eo = ['silentErrors' => true];

	update_calc_fields('contactos', $data['selectedID'], calculated_fields()['contactos']);

	// hook: contactos_after_update
	if(function_exists('contactos_after_update')) {
		$res = sql("SELECT * FROM `contactos` WHERE `id_contactos`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) $data = array_map('makeSafe', $row);

		$data['selectedID'] = $data['id_contactos'];
		$args = ['old_data' => $old_data];
		if(!contactos_after_update($data, getMemberInfo(), $args)) return;
	}

	// mm: update ownership data
	sql("UPDATE `membership_userrecords` SET `dateUpdated`='" . time() . "' WHERE `tableName`='contactos' AND `pkValue`='" . makeSafe($selected_id) . "'", $eo);
}

function contactos_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm = getTablePermissions('contactos');
	if(!$arrPerm['insert'] && $selected_id=='') return $Translation['tableAccessDenied'];
	$AllowInsert = ($arrPerm['insert'] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != '') {
		$dvprint = true;
	}

	$filterer_tipo_contacto = thisOr($_REQUEST['filterer_tipo_contacto'], '');
	$filterer_tipo_iden = thisOr($_REQUEST['filterer_tipo_iden'], '');
	$filterer_ciudad = thisOr($_REQUEST['filterer_ciudad'], '');
	$filterer_tipo_relacion = thisOr($_REQUEST['filterer_tipo_relacion'], '');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: tipo_contacto
	$combo_tipo_contacto = new DataCombo;
	// combobox: tipo_iden
	$combo_tipo_iden = new DataCombo;
	// combobox: ciudad
	$combo_ciudad = new DataCombo;
	// combobox: tipo_relacion
	$combo_tipo_relacion = new DataCombo;

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm['view']) return $Translation['tableAccessDenied'];

		// mm: who is the owner?
		$ownerGroupID = sqlValue("SELECT `groupID` FROM `membership_userrecords` WHERE `tableName`='contactos' AND `pkValue`='" . makeSafe($selected_id) . "'");
		$ownerMemberID = sqlValue("SELECT LCASE(`memberID`) FROM `membership_userrecords` WHERE `tableName`='contactos' AND `pkValue`='" . makeSafe($selected_id) . "'");

		if($arrPerm['view'] == 1 && getLoggedMemberID() != $ownerMemberID) return $Translation['tableAccessDenied'];
		if($arrPerm['view'] == 2 && getLoggedGroupID() != $ownerGroupID) return $Translation['tableAccessDenied'];

		// can edit?
		$AllowUpdate = 0;
		if(($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3) {
			$AllowUpdate = 1;
		}

		$res = sql("SELECT * FROM `contactos` WHERE `id_contactos`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'contactos_view.php', false);
		}
		$combo_tipo_contacto->SelectedData = $row['tipo_contacto'];
		$combo_tipo_iden->SelectedData = $row['tipo_iden'];
		$combo_ciudad->SelectedData = $row['ciudad'];
		$combo_tipo_relacion->SelectedData = $row['tipo_relacion'];
		$urow = $row; /* unsanitized data */
		$row = array_map('safe_html', $row);
	} else {
		$combo_tipo_contacto->SelectedData = $filterer_tipo_contacto;
		$combo_tipo_iden->SelectedData = $filterer_tipo_iden;
		$combo_ciudad->SelectedData = $filterer_ciudad;
		$combo_tipo_relacion->SelectedData = $filterer_tipo_relacion;
	}
	$combo_tipo_contacto->HTML = $combo_tipo_contacto->MatchText = '<span id="tipo_contacto-container' . $rnd1 . '"></span>';
	$combo_tipo_iden->HTML = '<span id="tipo_iden-container' . $rnd1 . '"></span><input type="hidden" name="tipo_iden" id="tipo_iden' . $rnd1 . '" value="' . html_attr($combo_tipo_iden->SelectedData) . '">';
	$combo_tipo_iden->MatchText = '<span id="tipo_iden-container-readonly' . $rnd1 . '"></span><input type="hidden" name="tipo_iden" id="tipo_iden' . $rnd1 . '" value="' . html_attr($combo_tipo_iden->SelectedData) . '">';
	$combo_ciudad->HTML = '<span id="ciudad-container' . $rnd1 . '"></span><input type="hidden" name="ciudad" id="ciudad' . $rnd1 . '" value="' . html_attr($combo_ciudad->SelectedData) . '">';
	$combo_ciudad->MatchText = '<span id="ciudad-container-readonly' . $rnd1 . '"></span><input type="hidden" name="ciudad" id="ciudad' . $rnd1 . '" value="' . html_attr($combo_ciudad->SelectedData) . '">';
	$combo_tipo_relacion->HTML = '<span id="tipo_relacion-container' . $rnd1 . '"></span><input type="hidden" name="tipo_relacion" id="tipo_relacion' . $rnd1 . '" value="' . html_attr($combo_tipo_relacion->SelectedData) . '">';
	$combo_tipo_relacion->MatchText = '<span id="tipo_relacion-container-readonly' . $rnd1 . '"></span><input type="hidden" name="tipo_relacion" id="tipo_relacion' . $rnd1 . '" value="' . html_attr($combo_tipo_relacion->SelectedData) . '">';

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_tipo_contacto__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['tipo_contacto'] : htmlspecialchars($filterer_tipo_contacto, ENT_QUOTES)); ?>"};
		AppGini.current_tipo_iden__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['tipo_iden'] : htmlspecialchars($filterer_tipo_iden, ENT_QUOTES)); ?>"};
		AppGini.current_ciudad__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['ciudad'] : htmlspecialchars($filterer_ciudad, ENT_QUOTES)); ?>"};
		AppGini.current_tipo_relacion__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['tipo_relacion'] : htmlspecialchars($filterer_tipo_relacion, ENT_QUOTES)); ?>"};

		jQuery(function() {
			setTimeout(function() {
				if(typeof(tipo_contacto_reload__RAND__) == 'function') tipo_contacto_reload__RAND__();
				if(typeof(tipo_iden_reload__RAND__) == 'function') tipo_iden_reload__RAND__();
				if(typeof(ciudad_reload__RAND__) == 'function') ciudad_reload__RAND__();
				if(typeof(tipo_relacion_reload__RAND__) == 'function') tipo_relacion_reload__RAND__();
			}, 50); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function tipo_contacto_reload__RAND__() {
			$j.ajax({
				url: 'ajax_combo.php',
				data: {
					t: 'contactos',
					f: 'tipo_contacto',
					id: AppGini.current_tipo_contacto__RAND__.value,
					text: AppGini.current_tipo_contacto__RAND__.text,
					o: <?php echo (($AllowUpdate || $AllowInsert) && !$dvprint ? '1' : '0'); ?>

				},
				success: function(html) {
					$j('#tipo_contacto-container__RAND__').html(html);
				},
				complete: function() { tipo_contacto_changed__RAND__() },
			});
		}

		function tipo_contacto_changed__RAND__() {
			if($j("input[name=tipo_contacto]").length) {
				if($j("input[name=tipo_contacto]:checked").length) {
					AppGini.current_tipo_contacto__RAND__.value = $j("input[name=tipo_contacto]:checked").val();
					AppGini.current_tipo_contacto__RAND__.text = "";
				} else {
					AppGini.current_tipo_contacto__RAND__.value = "";
					AppGini.current_tipo_contacto__RAND__.text = "";
				}
				AppGini.hideViewParentLinks();
			}

			if(typeof(tipo_contacto_update_autofills__RAND__) == 'function') tipo_contacto_update_autofills__RAND__();
		}
		function tipo_iden_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#tipo_iden-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_tipo_iden__RAND__.value, t: 'contactos', f: 'tipo_iden' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="tipo_iden"]').val(resp.results[0].id);
							$j('[id=tipo_iden-container-readonly__RAND__]').html('<span id="tipo_iden-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=tipo_iden_view_parent]').hide(); } else { $j('.btn[id=tipo_iden_view_parent]').show(); }


							if(typeof(tipo_iden_update_autofills__RAND__) == 'function') tipo_iden_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'contactos', f: 'tipo_iden' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_tipo_iden__RAND__.value = e.added.id;
				AppGini.current_tipo_iden__RAND__.text = e.added.text;
				$j('[name="tipo_iden"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=tipo_iden_view_parent]').hide(); } else { $j('.btn[id=tipo_iden_view_parent]').show(); }


				if(typeof(tipo_iden_update_autofills__RAND__) == 'function') tipo_iden_update_autofills__RAND__();
			});

			if(!$j("#tipo_iden-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_tipo_iden__RAND__.value, t: 'contactos', f: 'tipo_iden' },
					success: function(resp) {
						$j('[name="tipo_iden"]').val(resp.results[0].id);
						$j('[id=tipo_iden-container-readonly__RAND__]').html('<span id="tipo_iden-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=tipo_iden_view_parent]').hide(); } else { $j('.btn[id=tipo_iden_view_parent]').show(); }

						if(typeof(tipo_iden_update_autofills__RAND__) == 'function') tipo_iden_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_tipo_iden__RAND__.value, t: 'contactos', f: 'tipo_iden' },
				success: function(resp) {
					$j('[id=tipo_iden-container__RAND__], [id=tipo_iden-container-readonly__RAND__]').html('<span id="tipo_iden-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=tipo_iden_view_parent]').hide(); } else { $j('.btn[id=tipo_iden_view_parent]').show(); }

					if(typeof(tipo_iden_update_autofills__RAND__) == 'function') tipo_iden_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function ciudad_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#ciudad-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_ciudad__RAND__.value, t: 'contactos', f: 'ciudad' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="ciudad"]').val(resp.results[0].id);
							$j('[id=ciudad-container-readonly__RAND__]').html('<span id="ciudad-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=ciudades_view_parent]').hide(); } else { $j('.btn[id=ciudades_view_parent]').show(); }


							if(typeof(ciudad_update_autofills__RAND__) == 'function') ciudad_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'contactos', f: 'ciudad' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_ciudad__RAND__.value = e.added.id;
				AppGini.current_ciudad__RAND__.text = e.added.text;
				$j('[name="ciudad"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=ciudades_view_parent]').hide(); } else { $j('.btn[id=ciudades_view_parent]').show(); }


				if(typeof(ciudad_update_autofills__RAND__) == 'function') ciudad_update_autofills__RAND__();
			});

			if(!$j("#ciudad-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_ciudad__RAND__.value, t: 'contactos', f: 'ciudad' },
					success: function(resp) {
						$j('[name="ciudad"]').val(resp.results[0].id);
						$j('[id=ciudad-container-readonly__RAND__]').html('<span id="ciudad-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=ciudades_view_parent]').hide(); } else { $j('.btn[id=ciudades_view_parent]').show(); }

						if(typeof(ciudad_update_autofills__RAND__) == 'function') ciudad_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_ciudad__RAND__.value, t: 'contactos', f: 'ciudad' },
				success: function(resp) {
					$j('[id=ciudad-container__RAND__], [id=ciudad-container-readonly__RAND__]').html('<span id="ciudad-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=ciudades_view_parent]').hide(); } else { $j('.btn[id=ciudades_view_parent]').show(); }

					if(typeof(ciudad_update_autofills__RAND__) == 'function') ciudad_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function tipo_relacion_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#tipo_relacion-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_tipo_relacion__RAND__.value, t: 'contactos', f: 'tipo_relacion' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="tipo_relacion"]').val(resp.results[0].id);
							$j('[id=tipo_relacion-container-readonly__RAND__]').html('<span id="tipo_relacion-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=tipo_relacion_view_parent]').hide(); } else { $j('.btn[id=tipo_relacion_view_parent]').show(); }


							if(typeof(tipo_relacion_update_autofills__RAND__) == 'function') tipo_relacion_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'contactos', f: 'tipo_relacion' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_tipo_relacion__RAND__.value = e.added.id;
				AppGini.current_tipo_relacion__RAND__.text = e.added.text;
				$j('[name="tipo_relacion"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=tipo_relacion_view_parent]').hide(); } else { $j('.btn[id=tipo_relacion_view_parent]').show(); }


				if(typeof(tipo_relacion_update_autofills__RAND__) == 'function') tipo_relacion_update_autofills__RAND__();
			});

			if(!$j("#tipo_relacion-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_tipo_relacion__RAND__.value, t: 'contactos', f: 'tipo_relacion' },
					success: function(resp) {
						$j('[name="tipo_relacion"]').val(resp.results[0].id);
						$j('[id=tipo_relacion-container-readonly__RAND__]').html('<span id="tipo_relacion-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=tipo_relacion_view_parent]').hide(); } else { $j('.btn[id=tipo_relacion_view_parent]').show(); }

						if(typeof(tipo_relacion_update_autofills__RAND__) == 'function') tipo_relacion_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_tipo_relacion__RAND__.value, t: 'contactos', f: 'tipo_relacion' },
				success: function(resp) {
					$j('[id=tipo_relacion-container__RAND__], [id=tipo_relacion-container-readonly__RAND__]').html('<span id="tipo_relacion-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=tipo_relacion_view_parent]').hide(); } else { $j('.btn[id=tipo_relacion_view_parent]').show(); }

					if(typeof(tipo_relacion_update_autofills__RAND__) == 'function') tipo_relacion_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/contactos_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	} else {
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/contactos_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Contacto Detalles', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert) {
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return contactos_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return contactos_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	} else {
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return contactos_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly = '';
		$jsReadOnly .= "\tjQuery('#tipo_contacto').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#tipo_contacto_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#tipo_iden').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#tipo_iden_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#identificacion').replaceWith('<div class=\"form-control-static\" id=\"identificacion\">' + (jQuery('#identificacion').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#nombre').replaceWith('<div class=\"form-control-static\" id=\"nombre\">' + (jQuery('#nombre').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#ciudad').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#ciudad_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#telefono').replaceWith('<div class=\"form-control-static\" id=\"telefono\">' + (jQuery('#telefono').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#direccion').replaceWith('<div class=\"form-control-static\" id=\"direccion\">' + (jQuery('#direccion').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#tipo_relacion').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#tipo_relacion_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	} elseif($AllowInsert) {
		$jsEditable = "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(tipo_contacto)%%>', $combo_tipo_contacto->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(tipo_contacto)%%>', $combo_tipo_contacto->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(tipo_contacto)%%>', urlencode($combo_tipo_contacto->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(tipo_iden)%%>', $combo_tipo_iden->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(tipo_iden)%%>', $combo_tipo_iden->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(tipo_iden)%%>', urlencode($combo_tipo_iden->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(ciudad)%%>', $combo_ciudad->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(ciudad)%%>', $combo_ciudad->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(ciudad)%%>', urlencode($combo_ciudad->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(tipo_relacion)%%>', $combo_tipo_relacion->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(tipo_relacion)%%>', $combo_tipo_relacion->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(tipo_relacion)%%>', urlencode($combo_tipo_relacion->MatchText), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array('tipo_contacto' => array('contactos_tipo_contacto', 'Tipo de contacto'), 'tipo_iden' => array('tipo_iden', 'Tipo de ID'), 'ciudad' => array('ciudades', 'Ciudad'), 'tipo_relacion' => array('tipo_relacion', 'Tipo de relacion'), );
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] /* && !$_REQUEST['Embedded']*/) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id_contactos)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(tipo_contacto)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(tipo_iden)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(identificacion)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(nombre)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(ciudad)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(telefono)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(direccion)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(tipo_relacion)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(nota)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(reg_creado)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(creado)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(creado_por)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(editado)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(editado_por)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id_contactos)%%>', safe_html($urow['id_contactos']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id_contactos)%%>', html_attr($row['id_contactos']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id_contactos)%%>', urlencode($urow['id_contactos']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tipo_contacto)%%>', safe_html($urow['tipo_contacto']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tipo_contacto)%%>', html_attr($row['tipo_contacto']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tipo_contacto)%%>', urlencode($urow['tipo_contacto']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tipo_iden)%%>', safe_html($urow['tipo_iden']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tipo_iden)%%>', html_attr($row['tipo_iden']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tipo_iden)%%>', urlencode($urow['tipo_iden']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(identificacion)%%>', safe_html($urow['identificacion']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(identificacion)%%>', html_attr($row['identificacion']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(identificacion)%%>', urlencode($urow['identificacion']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(nombre)%%>', safe_html($urow['nombre']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(nombre)%%>', html_attr($row['nombre']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(nombre)%%>', urlencode($urow['nombre']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(ciudad)%%>', safe_html($urow['ciudad']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(ciudad)%%>', html_attr($row['ciudad']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ciudad)%%>', urlencode($urow['ciudad']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(telefono)%%>', safe_html($urow['telefono']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(telefono)%%>', html_attr($row['telefono']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(telefono)%%>', urlencode($urow['telefono']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(direccion)%%>', safe_html($urow['direccion']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(direccion)%%>', html_attr($row['direccion']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(direccion)%%>', urlencode($urow['direccion']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tipo_relacion)%%>', safe_html($urow['tipo_relacion']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tipo_relacion)%%>', html_attr($row['tipo_relacion']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tipo_relacion)%%>', urlencode($urow['tipo_relacion']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(nota)%%>', '<textarea name="nota" id="nota" rows="5">' . html_attr($row['nota']) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(nota)%%>', '<div id="nota" class="form-control-static">' . $row['nota'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(nota)%%>', nl2br($row['nota']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(nota)%%>', urlencode($urow['nota']), $templateCode);
		$templateCode = str_replace('<%%VALUE(reg_creado)%%>', app_datetime($row['reg_creado'], 'dt'), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(reg_creado)%%>', urlencode(app_datetime($urow['reg_creado'], 'dt')), $templateCode);
		$templateCode = str_replace('<%%VALUE(creado)%%>', app_datetime($row['creado'], 'dt'), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(creado)%%>', urlencode(app_datetime($urow['creado'], 'dt')), $templateCode);
		$templateCode = str_replace('<%%VALUE(creado_por)%%>', safe_html($urow['creado_por']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(creado_por)%%>', urlencode($urow['creado_por']), $templateCode);
		$templateCode = str_replace('<%%VALUE(editado)%%>', app_datetime($row['editado'], 'dt'), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(editado)%%>', urlencode(app_datetime($urow['editado'], 'dt')), $templateCode);
		$templateCode = str_replace('<%%VALUE(editado_por)%%>', safe_html($urow['editado_por']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(editado_por)%%>', urlencode($urow['editado_por']), $templateCode);
	} else {
		$templateCode = str_replace('<%%VALUE(id_contactos)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id_contactos)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(tipo_contacto)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tipo_contacto)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(tipo_iden)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tipo_iden)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(identificacion)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(identificacion)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(nombre)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(nombre)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(ciudad)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ciudad)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(telefono)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(telefono)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(direccion)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(direccion)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(tipo_relacion)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tipo_relacion)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(nota)%%>', '<textarea name="nota" id="nota" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%VALUE(reg_creado)%%>', '<%%creationDateTime%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(reg_creado)%%>', urlencode('<%%creationDateTime%%>'), $templateCode);
		$templateCode = str_replace('<%%VALUE(creado)%%>', '<%%creationDateTime%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(creado)%%>', urlencode('<%%creationDateTime%%>'), $templateCode);
		$templateCode = str_replace('<%%VALUE(creado_por)%%>', '<%%creatorUsername%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(creado_por)%%>', urlencode('<%%creatorUsername%%>'), $templateCode);
		$templateCode = str_replace('<%%VALUE(editado)%%>', '<%%editingDateTime%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(editado)%%>', urlencode('<%%editingDateTime%%>'), $templateCode);
		$templateCode = str_replace('<%%VALUE(editado_por)%%>', '<%%editorUsername%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(editado_por)%%>', urlencode('<%%editorUsername%%>'), $templateCode);
	}

	// process translations
	$templateCode = parseTemplate($templateCode);

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('contactos');
	if($selected_id) {
		$jdata = get_joined_record('contactos', $selected_id);
		if($jdata === false) $jdata = get_defaults('contactos');
		$rdata = $row;
	}
	$templateCode .= loadView('contactos-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: contactos_dv
	if(function_exists('contactos_dv')) {
		$args=[];
		contactos_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}